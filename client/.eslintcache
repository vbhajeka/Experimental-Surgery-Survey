[{"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js":"1","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ConfirmPage.js":"2","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js":"3","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js":"4","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js":"5","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js":"6","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js":"7","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js":"8","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js":"9","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/realState.js":"10","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js":"11","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js":"12","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js":"13","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js":"14","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js":"15","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js":"16","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js":"17","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js":"18","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js":"19","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js":"20"},{"size":1395,"mtime":1610759092980,"results":"21","hashOfConfig":"22"},{"size":1061,"mtime":1609705430696,"results":"23","hashOfConfig":"22"},{"size":5059,"mtime":1610937114903,"results":"24","hashOfConfig":"22"},{"size":748,"mtime":1610971027098,"results":"25","hashOfConfig":"22"},{"size":1950,"mtime":1610885614260,"results":"26","hashOfConfig":"22"},{"size":405,"mtime":1609705430726,"results":"27","hashOfConfig":"22"},{"size":12555,"mtime":1610962016921,"results":"28","hashOfConfig":"22"},{"size":544,"mtime":1610761064622,"results":"29","hashOfConfig":"22"},{"size":109284,"mtime":1610150738198,"results":"30","hashOfConfig":"22"},{"size":3818,"mtime":1610410997743,"results":"31","hashOfConfig":"22"},{"size":1836,"mtime":1610971482510,"results":"32","hashOfConfig":"22"},{"size":667,"mtime":1610885624720,"results":"33","hashOfConfig":"22"},{"size":6099,"mtime":1610971885016,"results":"34","hashOfConfig":"22"},{"size":7142,"mtime":1610972335577,"results":"35","hashOfConfig":"22"},{"size":4597,"mtime":1610971088544,"results":"36","hashOfConfig":"22"},{"size":5246,"mtime":1610939160997,"results":"37","hashOfConfig":"22"},{"size":974,"mtime":1610922297644,"results":"38","hashOfConfig":"22"},{"size":379,"mtime":1610922143150,"results":"39","hashOfConfig":"22"},{"size":4512,"mtime":1610922180114,"results":"40","hashOfConfig":"22"},{"size":3689,"mtime":1610928000717,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m62ta2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js",[],["88","89"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ConfirmPage.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js",["90","91"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js",["92","93"],"import {\n  TOGGLE_CANCEL_MODAL,\n  BACK_TO_HOME,\n  SET_TOKEN,\n  SUBMIT_SURVEY,\n  TOGGLE_EXPORT_MODAL,\n  DATE_CHANGED,\n} from '../actions/types';\n\nimport axios from 'axios';\nimport { setExportData } from '../actions/exportActions';\n\nconst initialState = {\n  auth0Token: null,\n  cancelModalIsOpen: false,\n  submitted: false,\n  exportModal: {\n    isOpen: false,\n    startDate: '',\n    endDate: '',\n    datesLegal: false,\n  },\n};\n\nconst toggleCancelModal = (state) => {\n  state.cancelModalIsOpen = !state.cancelModalIsOpen;\n  return state;\n};\n\nconst toggleExportModal = (state) => {\n  if (state.exportModal.isOpen) {\n    state.exportModal = {\n      isOpen: false,\n      startDate: '',\n      endDate: '',\n      datesLegal: false,\n    };\n  } else {\n    state.exportModal.isOpen = true;\n  }\n  return state;\n};\n\nconst handleDateChanged = (state, isStart, val) => {\n  console.log(isStart, val);\n  if (isStart) {\n    state.exportModal.startDate = val;\n  } else {\n    state.exportModal.endDate = val;\n  }\n  if (state.exportModal.startDate !== '' && state.exportModal.endDate !== '') {\n    state.exportModal.datesLegal =\n      new Date(state.exportModal.startDate) <\n      new Date(state.exportModal.endDate);\n  }\n  return { ...state };\n};\n\nexport default function reducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case TOGGLE_CANCEL_MODAL:\n      return { ...toggleCancelModal(state) };\n    case BACK_TO_HOME:\n      state.cancelModalIsOpen = false;\n      state.submitted = false;\n      return { ...state };\n    case SET_TOKEN:\n      state.auth0Token = payload.token;\n      return { ...state };\n    case SUBMIT_SURVEY:\n      state.submitted = true;\n      return { ...state };\n    case TOGGLE_EXPORT_MODAL:\n      return { ...toggleExportModal(state) };\n    case DATE_CHANGED:\n      return {\n        ...handleDateChanged(state, payload.date === 'start', payload.val),\n      };\n\n    default:\n      return state;\n  }\n}\n","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js",[],["94","95"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js",["96"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/realState.js",[],["97","98"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js",["99"],"import React, { Fragment } from 'react';\n\nimport { connect } from 'react-redux';\nimport {\n  Modal,\n  Header,\n  Table,\n  Container,\n  Button,\n  Icon,\n} from 'semantic-ui-react';\n\nimport { toggleOpenSpecific } from '../actions/exportActions';\nimport { toggleExportModal } from '../actions/stateActions';\n\nimport './components.css';\n\nconst ExportModalContent = ({ toggleOpenSpecific, isOpen, surveys, index }) => {\n  console.log(surveys);\n  const currSurvey = surveys.find((s) => s.date === index);\n\n  const getVals = (values) => {\n    let retVal = '';\n    values.forEach((v) => {\n      retVal += `${v}, `;\n    });\n    return retVal.substring(0, retVal.length - 2);\n  };\n\n  const groupSurveysByBlocks = (serv) => {\n    let retVal = [];\n    let currBlock;\n    serv.surveyAnswers.forEach((s) => {\n      const exists = retVal.find((x) => x.blockName === s.block);\n      if (exists) {\n        exists.questions.push(s);\n      } else {\n        currBlock = { blockName: '', questions: [] };\n        currBlock.blockName = s.block;\n        currBlock.questions.push(s);\n        retVal.push(currBlock);\n      }\n    });\n    return retVal;\n  };\n\n  let blocks;\n\n  if (isOpen) {\n    blocks = groupSurveysByBlocks(currSurvey);\n    console.log(blocks);\n  }\n\n  return (\n    <Fragment>\n      {isOpen && (\n        <Modal open={isOpen} basic closeIcon closeOnDimmerClick>\n          <Modal.Content>\n            <Container\n              fluid\n              id='header'\n              style={{\n                backgroundColor: 'white',\n                padding: '3%',\n                borderRadius: '10px',\n              }}\n            >\n              <Header size={'tiny'} color={'blue'} style={{ fontSize: '70%' }}>\n                Review Selections\n              </Header>\n            </Container>\n            <Container\n              style={{\n                overflowX: 'scroll',\n                marginTop: '2%',\n              }}\n            >\n              {blocks.map((block) => (\n                <Container\n                  key={block.block_id}\n                  style={{\n                    backgroundColor: 'white',\n                    padding: '2.5%',\n                    borderRadius: '10px',\n                    margin: '1%',\n                  }}\n                >\n                  <Header\n                    size={'tiny'}\n                    style={{ fontSize: '55%' }}\n                    color={'blue'}\n                  >\n                    {block.blockName}\n                  </Header>\n                  <Table striped celled style={{ fontSize: '45%' }}>\n                    <Table.Body>\n                      {block.questions.map((q) => (\n                        <Table.Row key={`${q.id}`}>\n                          <Table.Cell width={'8'}>{q.question}</Table.Cell>\n                          <Table.Cell>\n                            <Header size={'tiny'}>{getVals(q.value)}</Header>\n                          </Table.Cell>\n                        </Table.Row>\n                      ))}\n                    </Table.Body>\n                  </Table>\n                </Container>\n              ))}\n            </Container>\n          </Modal.Content>\n          <Modal.Actions style={{ textAlign: 'center' }}>\n            <Button color='red' inverted onClick={() => toggleOpenSpecific()}>\n              <Icon name='remove' /> Close\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isOpen: state.exportData.openSpecific,\n    surveys: state.exportData.surveyData,\n    index: state.exportData.toDisplay,\n  };\n};\n\nexport default connect(mapStateToProps, { toggleOpenSpecific })(\n  ExportModalContent\n);\n",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":11,"column":8,"nodeType":"108","messageId":"109","endLine":11,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":29,"column":9,"nodeType":"108","messageId":"109","endLine":29,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":10,"column":8,"nodeType":"108","messageId":"109","endLine":10,"endColumn":13},{"ruleId":"106","severity":1,"message":"111","line":11,"column":10,"nodeType":"108","messageId":"109","endLine":11,"endColumn":23},{"ruleId":"102","replacedBy":"112"},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","severity":1,"message":"114","line":188,"column":9,"nodeType":"108","messageId":"109","endLine":188,"endColumn":19},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","severity":1,"message":"117","line":14,"column":10,"nodeType":"108","messageId":"109","endLine":14,"endColumn":27},{"ruleId":"102","replacedBy":"118"},{"ruleId":"104","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setExportData' is defined but never used.",["120"],["121"],"'getAllQIds' is assigned a value but never used.",["120"],["121"],"'toggleExportModal' is defined but never used.",["120"],["121"],"no-global-assign","no-unsafe-negation"]