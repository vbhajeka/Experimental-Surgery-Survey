[{"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js":"1","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js":"2","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js":"3","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js":"4","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js":"5","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js":"6","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js":"7","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js":"8","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js":"9","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js":"10","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js":"11","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js":"12","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js":"13","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js":"14","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js":"15","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js":"16","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js":"17","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js":"18","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/store.js":"19","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportPage.js":"20","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/blockActions.js":"21","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/exportActions.js":"22","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/types.js":"23","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/blockReducer.js":"24","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ReviewBlock.js":"25","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/logo.js":"26","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/HomePage.js":"27","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModalContent.js":"28","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/stateReducer.js":"29","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/index.js":"30","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/QuestionBlock.js":"31","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/index.js":"32","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/exportReducer.js":"33","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/App.js":"34","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/new_logo.js":"35","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/newer_logo.js":"36","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModal.js":"37","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/stateActions.js":"38","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/AboutPage.js":"39","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ResultsPage.js":"40","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/mapComponent.js":"41","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/MapComponent.js":"42","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/resultsReducer.js":"43","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/resultsActions.js":"44","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/caRebateReducer.js":"45"},{"size":2166,"mtime":1611531209509,"results":"46","hashOfConfig":"47"},{"size":5614,"mtime":1611538172009,"results":"48","hashOfConfig":"47"},{"size":764,"mtime":1611530749256,"results":"49","hashOfConfig":"47"},{"size":1939,"mtime":1611538112054,"results":"50","hashOfConfig":"47"},{"size":405,"mtime":1609705430726,"results":"51","hashOfConfig":"47"},{"size":12314,"mtime":1611010377797,"results":"52","hashOfConfig":"47"},{"size":551,"mtime":1611537997877,"results":"53","hashOfConfig":"47"},{"size":109284,"mtime":1610150738198,"results":"54","hashOfConfig":"47"},{"size":1371,"mtime":1611444911080,"results":"55","hashOfConfig":"47"},{"size":681,"mtime":1611530799860,"results":"56","hashOfConfig":"47"},{"size":7535,"mtime":1611538324242,"results":"57","hashOfConfig":"47"},{"size":7804,"mtime":1611538101857,"results":"58","hashOfConfig":"47"},{"size":4431,"mtime":1611536409824,"results":"59","hashOfConfig":"47"},{"size":5244,"mtime":1611015161609,"results":"60","hashOfConfig":"47"},{"size":974,"mtime":1610922297644,"results":"61","hashOfConfig":"47"},{"size":379,"mtime":1610922143150,"results":"62","hashOfConfig":"47"},{"size":5174,"mtime":1611539718307,"results":"63","hashOfConfig":"47"},{"size":3695,"mtime":1611531087611,"results":"64","hashOfConfig":"47"},{"size":405,"mtime":1646813174039,"results":"65","hashOfConfig":"66"},{"size":5244,"mtime":1646813174020,"results":"67","hashOfConfig":"66"},{"size":1413,"mtime":1651066419400,"results":"68","hashOfConfig":"66"},{"size":379,"mtime":1646813174015,"results":"69","hashOfConfig":"66"},{"size":1025,"mtime":1651072429381,"results":"70","hashOfConfig":"66"},{"size":7891,"mtime":1651066391706,"results":"71","hashOfConfig":"66"},{"size":8004,"mtime":1651072391240,"results":"72","hashOfConfig":"66"},{"size":109284,"mtime":1646813174025,"results":"73","hashOfConfig":"66"},{"size":7155,"mtime":1651066537030,"results":"74","hashOfConfig":"66"},{"size":3695,"mtime":1646813174016,"results":"75","hashOfConfig":"66"},{"size":1939,"mtime":1646813174038,"results":"76","hashOfConfig":"66"},{"size":2494,"mtime":1651037606727,"results":"77","hashOfConfig":"66"},{"size":12406,"mtime":1651066473714,"results":"78","hashOfConfig":"66"},{"size":703,"mtime":1651065459157,"results":"79","hashOfConfig":"66"},{"size":974,"mtime":1646813174034,"results":"80","hashOfConfig":"66"},{"size":6229,"mtime":1651061481524,"results":"81","hashOfConfig":"66"},{"size":23532,"mtime":1649703697837,"results":"82","hashOfConfig":"66"},{"size":5686,"mtime":1649703697838,"results":"83","hashOfConfig":"66"},{"size":5174,"mtime":1646813174016,"results":"84","hashOfConfig":"66"},{"size":681,"mtime":1646813174015,"results":"85","hashOfConfig":"66"},{"size":3863,"mtime":1651061979794,"results":"86","hashOfConfig":"66"},{"size":1825,"mtime":1651071284250,"results":"87","hashOfConfig":"66"},{"size":3083,"mtime":1651048897582,"results":"88","hashOfConfig":"66"},{"size":11557,"mtime":1651079519899,"results":"89","hashOfConfig":"66"},{"size":2164,"mtime":1651076973286,"results":"90","hashOfConfig":"66"},{"size":917,"mtime":1651072466618,"results":"91","hashOfConfig":"66"},{"size":908,"mtime":1651067479334,"results":"92","hashOfConfig":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m62ta2",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"v0yjva",{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"140"},"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js",[],["195","196"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js",["197","198"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  Container,\n  Header,\n  Grid,\n  Segment,\n  Dropdown,\n  Progress,\n  Image,\n  Modal,\n  Icon,\n  Button,\n} from 'semantic-ui-react';\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\n\nimport {\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n} from '../actions/blockActions';\n\nimport { modalActions } from '../actions/stateActions';\n\nconst QuestionBlock = ({\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n  modalActions,\n  questions,\n  block_id,\n  blocks,\n  current_block,\n  blocks_seen,\n  ping,\n  cancelModalIsOpen,\n}) => {\n  // make sure we have questions to display - if not, redirect to home page\n  const history = useHistory();\n  if (blocks === undefined) {\n    history.push('/');\n    return <div>empty</div>;\n  }\n  // set current block & questions\n  current_block = blocks.find((b) => b.block_id === block_id);\n  questions = current_block.questions;\n\n  const isSelected = (value, option) => {\n    return (value, value.find((o) => o === option.value) !== undefined)\n      ? 'orange'\n      : 'black';\n  };\n\n  const dropdownChange = (event, { value }, qId) => {\n    // console.log(value, qId);\n    dropDownSelect(block_id, qId, value);\n  };\n\n  const getOptions = (options) => {\n    let ddOptions = [];\n    options.forEach((o) => {\n      ddOptions.push({ key: o.value, value: o.value, text: o.value });\n    });\n    return ddOptions;\n  };\n\n  const onTextChange = (qId, val) => {\n    // console.log(qId, val);\n    updateFRAction(block_id, qId, val);\n  };\n\n  const reviewEnabled = () => {\n    let unfinished = blocks.filter(\n      (b) => b.required && b.enabled && nextDisabled(b.block_id)\n    );\n    let curr_index = blocks.indexOf(\n      blocks.find((b) => b.block_id === block_id)\n    );\n\n    if (blocks_seen !== undefined) {\n      for (let i = curr_index; i < blocks.length; i++) {\n        const this_block = blocks[i];\n        if (this_block.enabled && !blocks_seen.includes(blocks[i].block_id)) {\n          return false;\n        }\n      }\n    }\n    return unfinished.length > 0 ? false : true;\n  };\n\n  const nextDisabled = (b_id = block_id) => {\n    let currBlock = blocks.find((b) => b.block_id === b_id);\n    let unfinished = currBlock.questions.filter(\n      (q) =>\n        q.required && q.enabled && (q.value === null || q.value.length === 0)\n    );\n    return unfinished === undefined || unfinished.length > 0 ? true : false;\n  };\n\n  const nextDisabledVar = nextDisabled();\n\n  const previousVisible = () => {\n    let check = blocks.indexOf(blocks.find((b) => b.block_id === block_id)) - 1;\n    while (check >= 0) {\n      if (blocks[check].enabled) {\n        return true;\n      }\n      check--;\n    }\n    return false;\n  };\n\n  const nextVisible = () => {\n    let check = blocks.indexOf(blocks.find((b) => b.block_id === block_id)) + 1;\n    while (check < blocks.length) {\n      if (blocks[check].enabled) {\n        return true;\n      }\n      check++;\n    }\n    return false;\n  };\n\n  const getProgress = () => {\n    const numEnabled = blocks.filter((b) => b.enabled);\n    let numCompleted = 1;\n    for (\n      let i = 0;\n      i < blocks.indexOf(blocks.find((b) => b.block_id === block_id));\n      i++\n    ) {\n      if (blocks[i].enabled) {\n        numCompleted++;\n      }\n    }\n    console.log(\n      'progress is',\n      Math.floor((numCompleted / numEnabled.length) * 100)\n    );\n    return Math.floor((numCompleted / numEnabled.length) * 100);\n  };\n\n  const nextBlockActionLocal = () => {\n    if (!nextDisabledVar) {\n      nextBlockAction();\n    } else {\n    }\n  };\n\n  const getDefaultValue = (type, val) => {\n    if (val === []) {\n      return [];\n    }\n    if (type === 'DDS') {\n      return val[0];\n    } else {\n      return val;\n    }\n  };\n\n  const setTodaysDate = (q_id) => {\n    let now = new Date();\n    let month = `${now.getMonth() + 1}`;\n    if (month.length === 1) {\n      month = `0${month}`;\n    }\n    let date = `${now.getDate()}`;\n    if (date.length === 1) {\n      date = `0${date}`;\n    }\n    let dateIso = `${now.getFullYear()}-${month}-${date}`;\n    if (current_block.questions.find((q) => q.id === q_id).value.length === 0) {\n      onTextChange(q_id, dateIso);\n    }\n    return dateIso;\n  };\n\n  const getAllQIds = () => {\n    let ids = [];\n    let retVal = '';\n    blocks.forEach((b) => {\n      b.questions.forEach((q) => {\n        ids.push(q.id);\n        retVal += q.id + ', ';\n      });\n    });\n    console.log(ids);\n    console.log(retVal);\n    return retVal;\n  };\n\n  return (\n    <Fragment>\n      <Modal basic open={cancelModalIsOpen}>\n        <Modal.Content>\n          <p>\n            Are you sure you'd like to abandon this survey and return to the\n            home page? All survey data will be lost\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Link to='/'>\n            <Button color='red' inverted onClick={() => modalActions(true)}>\n              <Icon name='remove' /> Abandon\n            </Button>\n          </Link>\n          <Button color='green' inverted onClick={() => modalActions(false)}>\n            <Icon name='checkmark' /> Continue Survey\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <Progress percent={getProgress()} color={'blue'} progress active />\n      <Container\n        fluid\n        id='header'\n        style={{\n          backgroundColor: 'white',\n          padding: '2%',\n          paddingBottom: '1.5%',\n          borderRadius: '10px',\n        }}\n      >\n        {current_block.required && (\n          <Header size={'tiny'} color={'blue'} style={{ fontSize: '70%' }}>\n            {current_block.block_header}\n          </Header>\n        )}\n        {!current_block.required && (\n          <Header size={'tiny'} color={'orange'} style={{ fontSize: '70%' }}>\n            {current_block.block_header} (Optional)\n          </Header>\n        )}\n        <Container text fluid>\n          <p>{current_block.block_description}</p>\n        </Container>\n      </Container>\n      <Container\n        style={{ overflowX: 'auto', marginBottom: '6.5%', marginTop: '2%' }}\n      >\n        {questions.map(\n          (q) =>\n            q.enabled && (\n              <Container fluid key={q.id} className={'questionBlock'}>\n                <Grid divided stackable columns={2}>\n                  <Grid.Row>\n                    <Grid.Column textAlign={'left'} width={8}>\n                      <Container text fluid style={{ maxWidth: '30%' }}>\n                        <Header size={'tiny'}>{q.question_header}</Header>\n                        <p>{q.question_desc}</p>\n                        {q.img !== undefined &&\n                          q.img !== null &&\n                          q.img !== '' && <Image src={q.img} fluid />}\n                        {q.long_question_desc != null &&\n                          q.long_question_desc.length > 0 &&\n                          q.long_question_desc.map((desc) => (\n                            <p key={desc}>{desc}</p>\n                          ))}\n                      </Container>\n                    </Grid.Column>\n                    <Grid.Column width={8} textAlign={'right'}>\n                      <Container\n                        fluid\n                        style={{\n                          display: 'flex',\n                          flexFlow: 'wrap',\n                        }}\n                      >\n                        {(q.type === 'MC' || q.type === 'SATA') &&\n                          q.options.map((o) => (\n                            <Segment\n                              textAlign={'center'}\n                              inverted\n                              color={isSelected(q.value, o)}\n                              onClick={() =>\n                                blockAction(block_id, q.id, o.value)\n                              }\n                              key={o.value}\n                              style={{\n                                margin: '1%',\n                                fontSize: '1.1rem',\n                              }}\n                              className={'selectButtons'}\n                            >\n                              {o.value}\n                            </Segment>\n                          ))}\n                        {(q.type === 'DDS' || q.type === 'DDM') && (\n                          <Container key={q.id}>\n                            <Dropdown\n                              fluid\n                              multiple={q.type === 'DDM'}\n                              selection\n                              clearable\n                              defaultValue={getDefaultValue(q.type, q.value)}\n                              options={getOptions(q.options)}\n                              onChange={(e, s) => dropdownChange(e, s, q.id)}\n                              style={{ fontSize: '1rem' }}\n                            />\n                          </Container>\n                        )}\n                        {q.type === 'FR' && (\n                          <Container key={q.id}>\n                            <input\n                              name={q.value}\n                              defaultValue={q.value}\n                              type={q.fr_type}\n                              onChange={(val) =>\n                                onTextChange(q.id, val.target.value)\n                              }\n                              className={'inputField'}\n                            ></input>\n                          </Container>\n                        )}\n                      </Container>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Container>\n            )\n        )}\n      </Container>\n      <Container\n        className={'bottomButtons'}\n        style={{ position: 'absolute', bottom: '3.6%' }}\n      >\n        <Grid container>\n          <Grid.Row columns={'4'}>\n            <Grid.Column floated='left'>\n              {previousVisible() && (\n                <Segment\n                  style={{ margin: '2%' }}\n                  inverted\n                  color={'blue'}\n                  onClick={() => prevBlockAction()}\n                  className={'buttonSegEnabled'}\n                >\n                  Previous\n                </Segment>\n              )}\n            </Grid.Column>\n            <Grid.Column floated='left'>\n              <Segment\n                style={{ margin: '2%' }}\n                inverted\n                color={'red'}\n                onClick={() => modalActions(false)}\n                className={'buttonSegEnabled'}\n              >\n                Cancel\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              {reviewEnabled() && (\n                <Link to='/review'>\n                  <Segment\n                    style={{ margin: '2%' }}\n                    inverted\n                    color={'green'}\n                    className={'buttonSegEnabled'}\n                  >\n                    Review\n                  </Segment>\n                </Link>\n              )}\n            </Grid.Column>\n            <Grid.Column floated='right'>\n              {nextVisible() && (\n                <Segment\n                  style={{ margin: '2%' }}\n                  inverted\n                  color={'blue'}\n                  onClick={() => nextBlockActionLocal()}\n                  disabled={nextDisabledVar}\n                  className={\n                    nextDisabledVar ? 'buttonSegDisabled' : 'buttonSegEnabled'\n                  }\n                >\n                  Next\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    // questions: state.blocks.questions,\n    ping: state.blocks.ping,\n\n    block_id: state.blocks.current,\n    blocks: state.blocks.blocks,\n    blocks_seen: state.blocks.blocks_seen,\n\n    cancelModalIsOpen: state.state.cancelModalIsOpen,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n  modalActions,\n})(QuestionBlock);\n",["199","200"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js",[],["201","202"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js",[],["203","204"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js",[],["205","206"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/store.js",[],["207","208"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportPage.js",[],["209","210"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/blockActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/exportActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/types.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/blockReducer.js",["211"],"import {\n  SET_STATE_INIT,\n  SET_PREFS,\n  SELECT_MC_SATA,\n  DROPDOWN_SELECT,\n  UPDATE_FR,\n  NEXT_BLOCK,\n  PREV_BLOCK,\n  SUBMIT_SURVEY,\n  BACK_TO_HOME,\n} from '../actions/types';\n\nlet realState = { cont: false };\nlet initState = JSON.parse(JSON.stringify(realState));\n\nconst getTodaysDate = () => {\n  let now = new Date();\n  let month = `${now.getMonth() + 1}`;\n  if (month.length === 1) {\n    month = `0${month}`;\n  }\n  let date = `${now.getDate()}`;\n  if (date.length === 1) {\n    date = `0${date}`;\n  }\n  let dateIso = `${now.getFullYear()}-${month}-${date}`;\n  return dateIso;\n};\n\nconst setStateInitBody = (init) => {\n  init.cont = true;\n  // find any dates, give them a default value of today's date\n  init.blocks.forEach((b) => {\n    b.questions.forEach((q) => {\n      if (q.type === 'FR' && q.fr_type === 'date') {\n        q.value = [getTodaysDate()];\n      }\n    });\n  });\n  return { ...init };\n};\n\nconst enableChildrenRec = (blocks, currQ, option_selected, toEnable) => {\n  // base cases\n  if (currQ.type === 'FR') {\n    console.log('quitting because FR has no children');\n    return;\n  } else if (\n    option_selected === undefined ||\n    option_selected === null ||\n    option_selected.length === 0\n  ) {\n    console.log('quitting because nothing was selected');\n    return;\n  } else {\n    option_selected.forEach((option) => {\n      console.log('attempting new recursive calls');\n      currQ.options\n        .find((o) => option === o.value)\n        .children.forEach((c) => {\n          blocks.forEach((b) => {\n            b.questions.forEach((bq) => {\n              if (bq.id === c) {\n                bq.enabled = toEnable;\n                enableChildrenRec(blocks, bq, bq.value, toEnable);\n              }\n            });\n          });\n        });\n    });\n  }\n};\n\nconst enableBlocks = (blocks, currQ, options, value) => {\n  options.forEach((x) => {\n    const currOptions = currQ.options.find((o) => o.value === x);\n    // enable blocks with only one dependency\n    if (currOptions.blocks_enabled) {\n      currOptions.blocks_enabled.forEach((be) => {\n        blocks.find((b) => b.block_id === be).enabled = value;\n      });\n    }\n    // now deal with partial enables\n    if (currOptions.blocks_partially_enabled) {\n      // find partially enabled block\n      currOptions.blocks_partially_enabled.forEach((be) => {\n        let part = blocks.find((b) => b.block_id === be.id);\n        // update toEnable value at currQ's position\n        part.toEnable[be.index] = value;\n        // now reevaluate part's enabled boolean\n        part.enabled = !part.toEnable.includes(false);\n      });\n    }\n  });\n};\n\nconst selectMC_SATABody = (state, payload) => {\n  const currBlock = state.blocks.find((b) => b.block_id === payload.block_id);\n\n  const currQ = currBlock.questions.find((q) => q.id === payload.question_id);\n\n  let newDeselections = [];\n  let newSelections = [];\n\n  // first check for deselction\n  if (currQ.value.find((o) => o === payload.option_selected) !== undefined) {\n    console.log('this is a pure deselection');\n    currQ.value = currQ.value.filter((o) => o !== payload.option_selected);\n    newDeselections = [payload.option_selected];\n  } else if (currQ.type === 'MC') {\n    // overwrite value cuz its MC\n    if (currQ.value) {\n      newDeselections = currQ.value;\n    }\n    newSelections = [payload.option_selected];\n    currQ.value = [payload.option_selected];\n    if (payload.enumVal != undefined) {\n      currQ.enumVal = [payload.enumVal];\n    }\n  } else if (currQ.type === 'SATA') {\n    newSelections = [payload.option_selected];\n    currQ.value.push(payload.option_selected);\n  }\n\n  // console.log('del:', newDeselections);\n  // console.log('add:', newSelections);\n\n  if (newDeselections.length > 0) {\n    enableChildrenRec(state.blocks, currQ, newDeselections, false);\n    enableBlocks(state.blocks, currQ, newDeselections, false);\n  }\n  if (newSelections.length > 0) {\n    enableChildrenRec(state.blocks, currQ, newSelections, true);\n    enableBlocks(state.blocks, currQ, newSelections, true);\n  }\n\n  state.ping = !state.ping;\n  return state;\n};\n\nconst dropdownSelectBody = (state, payload) => {\n  const currBlock = state.blocks.find((b) => b.block_id === payload.block_id);\n\n  const currQ = currBlock.questions.find((q) => q.id === payload.question_id);\n\n  if (currQ.type === 'DDS') {\n    payload.option_selected = [payload.option_selected];\n  }\n\n  const newAdditions = payload.option_selected.filter(\n    (x) => !currQ.value.includes(x)\n  );\n\n  const newDeletions = currQ.value.filter(\n    (x) => !payload.option_selected.includes(x)\n  );\n\n  // console.log('add:', newAdditions);\n  // console.log('del:', newDeletions);\n\n  let addition = newAdditions.length > 0 && newAdditions[0].length > 0;\n  let deletion = newDeletions.length > 0 && newDeletions[0].length > 0;\n\n  // always overwrite value because the entire value is sent in payload\n  currQ.value =\n    payload.option_selected.length === 1 && payload.option_selected[0] === ''\n      ? []\n      : payload.option_selected;\n  // enable children of new additions\n  if (addition) {\n    enableChildrenRec(state.blocks, currQ, newAdditions, true);\n    enableBlocks(state.blocks, currQ, newAdditions, true);\n  }\n  // disable children of new deletions\n  if (deletion) {\n    enableChildrenRec(state.blocks, currQ, newDeletions, false);\n    enableBlocks(state.blocks, currQ, newDeletions, false);\n  }\n  state.ping = !state.ping;\n  return state;\n};\n\nconst freeResponseBody = (state, payload) => {\n  const currBlock = state.blocks.find((b) => b.block_id === payload.block_id);\n\n  currBlock.questions.find((q) => q.id === payload.question_id).value = [\n    payload.option_selected,\n  ];\n\n  state.ping = !state.ping;\n  return state;\n};\n\nconst nextBlockActionBody = (state, payload) => {\n  // TODO: Hardcoded summary page\n  let curr_block_index =\n    state.blocks.indexOf(\n      state.blocks.find((b) => b.block_id === state.current)\n    ) + 1;\n  while (!state.blocks[curr_block_index].enabled) {\n    curr_block_index++;\n  }\n  state.current = state.blocks[curr_block_index].block_id;\n  state.ping = !state.ping;\n\n  state.blocks_seen.push(state.blocks[curr_block_index].block_id);\n\n  return state;\n};\n\nconst prevBlockActionBody = (state, payload) => {\n  let curr_block_index =\n    state.blocks.indexOf(\n      state.blocks.find((b) => b.block_id === state.current)\n    ) - 1;\n  while (!state.blocks[curr_block_index].enabled) {\n    curr_block_index--;\n  }\n  state.current = state.blocks[curr_block_index].block_id;\n  state.ping = !state.ping;\n\n  return state;\n};\n\nconst clearState = () => {\n  let temp = JSON.parse(JSON.stringify(initState));\n  initState = JSON.parse(JSON.stringify(temp));\n  return { ...temp };\n};\n\nconst setPrefsBody = (state, prefs) => {\n  // for each pref, loop through blocks until we find this particular question\n  prefs.forEach((pref) => {\n    let block = state.blocks.find((b) => b.block_id === pref.block);\n    let question = block.questions.find((q) => q.id === pref.id);\n    question.value = pref.value;\n  });\n  console.log('set prefs!');\n  return { ...state };\n};\n\nexport default function reducer(state = realState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_STATE_INIT:\n      return { ...setStateInitBody(payload.initState) };\n    case SET_PREFS:\n      return { ...setPrefsBody(state, payload.prefs) };\n    case SELECT_MC_SATA:\n      return { ...selectMC_SATABody(state, payload) };\n    case DROPDOWN_SELECT:\n      return { ...dropdownSelectBody(state, payload) };\n    case UPDATE_FR:\n      return { ...freeResponseBody(state, payload) };\n    case NEXT_BLOCK:\n      return { ...nextBlockActionBody(state, payload) };\n    case PREV_BLOCK:\n      return { ...prevBlockActionBody(state, payload) };\n    case SUBMIT_SURVEY:\n      return { ...clearState(true) };\n    case BACK_TO_HOME:\n      return { ...clearState(false) };\n    default:\n      return state;\n  }\n}\n","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ReviewBlock.js",["212"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/logo.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/HomePage.js",["213","214","215","216","217","218","219"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModalContent.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/stateReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/index.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/QuestionBlock.js",["220","221"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/index.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/exportReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/App.js",["222"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/new_logo.js",[],["223","224"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/newer_logo.js",[],["225","226"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModal.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/stateActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/AboutPage.js",["227","228","229","230","231","232","233","234","235","236","237"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ResultsPage.js",["238"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/mapComponent.js",["239","240","241","242","243","244","245","246","247","248"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/MapComponent.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/resultsReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/resultsActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/caRebateReducer.js",["266"],"const initialState = {\n  newCar: [\n    {},\n    {\n      incomeScore: 1,\n      electric: 5250,\n      hybrid: 4250,\n    },\n    {\n      incomeScore: 2,\n      electric: 5250,\n      hybrid: 4250,\n    },\n    {\n      incomeScore: 3,\n      electric: 5250,\n      hybrid: 4250,\n    },\n    {\n      incomeScore: 4,\n      electric: 2750,\n      hybrid: 1750,\n    },\n  ],\n  usedCar: [\n    {},\n    {\n      incomeScore: 1,\n      electric: 1500,\n      hybrid: 1500,\n    },\n    {\n      incomeScore: 2,\n      electric: 1500,\n      hybrid: 1500,\n    },\n    {\n      incomeScore: 3,\n      electric: 1500,\n      hybrid: 1500,\n    },\n    {\n      incomeScore: 4,\n      electric: 1500,\n      hybrid: 1500,\n    },\n  ],\n  federal: {\n    electric: 7500,\n    hybrid: 5000,\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    default:\n      return state;\n  }\n}\n",{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":170,"column":9,"nodeType":"273","messageId":"274","endLine":170,"endColumn":22},{"ruleId":"271","severity":1,"message":"275","line":187,"column":9,"nodeType":"273","messageId":"274","endLine":187,"endColumn":19},{"ruleId":"267","replacedBy":"276"},{"ruleId":"269","replacedBy":"277"},{"ruleId":"267","replacedBy":"278"},{"ruleId":"269","replacedBy":"279"},{"ruleId":"267","replacedBy":"280"},{"ruleId":"269","replacedBy":"281"},{"ruleId":"267","replacedBy":"282"},{"ruleId":"269","replacedBy":"283"},{"ruleId":"267","replacedBy":"284"},{"ruleId":"269","replacedBy":"285"},{"ruleId":"267","replacedBy":"286"},{"ruleId":"269","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":117,"column":25,"nodeType":"290","messageId":"291","endLine":117,"endColumn":27},{"ruleId":"271","severity":1,"message":"292","line":56,"column":9,"nodeType":"273","messageId":"274","endLine":56,"endColumn":22},{"ruleId":"271","severity":1,"message":"293","line":13,"column":8,"nodeType":"273","messageId":"274","endLine":13,"endColumn":19},{"ruleId":"271","severity":1,"message":"294","line":15,"column":10,"nodeType":"273","messageId":"274","endLine":15,"endColumn":20},{"ruleId":"271","severity":1,"message":"295","line":26,"column":5,"nodeType":"273","messageId":"274","endLine":26,"endColumn":20},{"ruleId":"271","severity":1,"message":"296","line":27,"column":5,"nodeType":"273","messageId":"274","endLine":27,"endColumn":22},{"ruleId":"271","severity":1,"message":"297","line":28,"column":5,"nodeType":"273","messageId":"274","endLine":28,"endColumn":11},{"ruleId":"271","severity":1,"message":"298","line":30,"column":5,"nodeType":"273","messageId":"274","endLine":30,"endColumn":14},{"ruleId":"271","severity":1,"message":"299","line":45,"column":9,"nodeType":"273","messageId":"274","endLine":45,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":170,"column":9,"nodeType":"273","messageId":"274","endLine":170,"endColumn":22},{"ruleId":"271","severity":1,"message":"275","line":187,"column":9,"nodeType":"273","messageId":"274","endLine":187,"endColumn":19},{"ruleId":"288","severity":1,"message":"289","line":137,"column":19,"nodeType":"290","messageId":"291","endLine":137,"endColumn":21},{"ruleId":"267","replacedBy":"300"},{"ruleId":"269","replacedBy":"301"},{"ruleId":"267","replacedBy":"302"},{"ruleId":"269","replacedBy":"303"},{"ruleId":"271","severity":1,"message":"304","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"271","severity":1,"message":"306","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"294","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":20},{"ruleId":"271","severity":1,"message":"293","line":18,"column":8,"nodeType":"273","messageId":"274","endLine":18,"endColumn":19},{"ruleId":"271","severity":1,"message":"295","line":26,"column":11,"nodeType":"273","messageId":"274","endLine":26,"endColumn":26},{"ruleId":"271","severity":1,"message":"296","line":26,"column":28,"nodeType":"273","messageId":"274","endLine":26,"endColumn":45},{"ruleId":"271","severity":1,"message":"297","line":26,"column":47,"nodeType":"273","messageId":"274","endLine":26,"endColumn":53},{"ruleId":"271","severity":1,"message":"298","line":26,"column":55,"nodeType":"273","messageId":"274","endLine":26,"endColumn":64},{"ruleId":"307","severity":1,"message":"308","line":64,"column":17,"nodeType":"309","endLine":64,"endColumn":55},{"ruleId":"307","severity":1,"message":"308","line":77,"column":17,"nodeType":"309","endLine":77,"endColumn":138},{"ruleId":"271","severity":1,"message":"310","line":4,"column":3,"nodeType":"273","messageId":"274","endLine":4,"endColumn":7},{"ruleId":"271","severity":1,"message":"311","line":1,"column":25,"nodeType":"273","messageId":"274","endLine":1,"endColumn":30},{"ruleId":"271","severity":1,"message":"304","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"271","severity":1,"message":"306","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":18},{"ruleId":"271","severity":1,"message":"294","line":11,"column":10,"nodeType":"273","messageId":"274","endLine":11,"endColumn":20},{"ruleId":"271","severity":1,"message":"312","line":14,"column":10,"nodeType":"273","messageId":"274","endLine":14,"endColumn":18},{"ruleId":"271","severity":1,"message":"293","line":20,"column":8,"nodeType":"273","messageId":"274","endLine":20,"endColumn":19},{"ruleId":"313","severity":1,"message":"314","line":42,"column":5,"nodeType":"315","messageId":"316","endLine":52,"endColumn":6},{"ruleId":"271","severity":1,"message":"317","line":50,"column":9,"nodeType":"273","messageId":"274","endLine":50,"endColumn":20},{"ruleId":"318","severity":2,"message":"319","line":98,"column":41,"nodeType":"273","messageId":"320","endLine":98,"endColumn":60},{"ruleId":"271","severity":1,"message":"311","line":1,"column":25,"nodeType":"273","messageId":"274","endLine":1,"endColumn":30},{"ruleId":"271","severity":1,"message":"321","line":88,"column":7,"nodeType":"273","messageId":"274","endLine":88,"endColumn":16},{"ruleId":"322","severity":1,"message":"323","line":114,"column":11,"nodeType":"273","messageId":"324","endLine":114,"endColumn":23},{"ruleId":"322","severity":1,"message":"325","line":120,"column":11,"nodeType":"273","messageId":"324","endLine":120,"endColumn":23},{"ruleId":"271","severity":1,"message":"326","line":122,"column":7,"nodeType":"273","messageId":"274","endLine":122,"endColumn":19},{"ruleId":"271","severity":1,"message":"327","line":151,"column":9,"nodeType":"273","messageId":"274","endLine":151,"endColumn":27},{"ruleId":"271","severity":1,"message":"328","line":152,"column":9,"nodeType":"273","messageId":"274","endLine":152,"endColumn":29},{"ruleId":"271","severity":1,"message":"329","line":161,"column":9,"nodeType":"273","messageId":"274","endLine":161,"endColumn":28},{"ruleId":"271","severity":1,"message":"330","line":162,"column":9,"nodeType":"273","messageId":"274","endLine":162,"endColumn":30},{"ruleId":"271","severity":1,"message":"331","line":164,"column":9,"nodeType":"273","messageId":"274","endLine":164,"endColumn":25},{"ruleId":"271","severity":1,"message":"332","line":165,"column":9,"nodeType":"273","messageId":"274","endLine":165,"endColumn":27},{"ruleId":"271","severity":1,"message":"333","line":175,"column":9,"nodeType":"273","messageId":"274","endLine":175,"endColumn":21},{"ruleId":"271","severity":1,"message":"334","line":178,"column":9,"nodeType":"273","messageId":"274","endLine":178,"endColumn":26},{"ruleId":"271","severity":1,"message":"335","line":182,"column":9,"nodeType":"273","messageId":"274","endLine":182,"endColumn":24},{"ruleId":"271","severity":1,"message":"336","line":185,"column":9,"nodeType":"273","messageId":"274","endLine":185,"endColumn":29},{"ruleId":"271","severity":1,"message":"337","line":191,"column":9,"nodeType":"273","messageId":"274","endLine":191,"endColumn":28},{"ruleId":"271","severity":1,"message":"338","line":194,"column":9,"nodeType":"273","messageId":"274","endLine":194,"endColumn":33},{"ruleId":"271","severity":1,"message":"339","line":55,"column":17,"nodeType":"273","messageId":"274","endLine":55,"endColumn":24},"no-native-reassign",["340"],"no-negated-in-lhs",["341"],"no-unused-vars","'setTodaysDate' is assigned a value but never used.","Identifier","unusedVar","'getAllQIds' is assigned a value but never used.",["340"],["341"],["340"],["341"],["340"],["341"],["340"],["341"],["340"],["341"],["340"],["341"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'reviewClicked' is assigned a value but never used.","'ExportModal' is defined but never used.","'newer_logo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'loginWithRedirect' is assigned a value but never used.","'logout' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'callPost' is assigned a value but never used.",["340"],["341"],["340"],["341"],"'Link' is defined but never used.","'logo' is defined but never used.","'new_logo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Grid' is defined but never used.","'Image' is defined but never used.","'useAuth0' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'transitMode' is assigned a value but never used.","no-undef","'monthlyElectricDiff' is not defined.","undef","'newOrUsed' is assigned a value but never used.","no-redeclare","'jankDuration' is already defined.","redeclared","'jankDistance' is already defined.","'distanceBike' is assigned a value but never used.","'dailySavingsHybrid' is assigned a value but never used.","'dailySavingsElectric' is assigned a value but never used.","'yearlySavingsHybrid' is assigned a value but never used.","'yearlySavingsElectric' is assigned a value but never used.","'rebateDaysHybrid' is assigned a value but never used.","'rebateDaysElectric' is assigned a value but never used.","'timeDiffBike' is assigned a value but never used.","'yearlySavingsBike' is assigned a value but never used.","'timeDiffTransit' is assigned a value but never used.","'yearlySavingsTransit' is assigned a value but never used.","'timeDiffBikeTransit' is assigned a value but never used.","'yearlySavingsBikeTransit' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]