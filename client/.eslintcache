[{"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js":"1","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js":"2","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js":"3","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js":"4","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js":"5","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js":"6","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js":"7","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js":"8","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js":"9","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js":"10","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js":"11","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js":"12","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js":"13","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js":"14","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js":"15","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js":"16","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js":"17","/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js":"18","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/store.js":"19","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportPage.js":"20","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/blockActions.js":"21","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/exportActions.js":"22","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/types.js":"23","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/blockReducer.js":"24","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ReviewBlock.js":"25","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/logo.js":"26","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/HomePage.js":"27","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModalContent.js":"28","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/stateReducer.js":"29","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/index.js":"30","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/QuestionBlock.js":"31","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/index.js":"32","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/exportReducer.js":"33","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/App.js":"34","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/new_logo.js":"35","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/newer_logo.js":"36","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModal.js":"37","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/stateActions.js":"38","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/AboutPage.js":"39","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ResultsPage.js":"40","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/mapComponent.js":"41","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/MapComponent.js":"42","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/resultsReducer.js":"43","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/resultsActions.js":"44"},{"size":2166,"mtime":1611531209509,"results":"45","hashOfConfig":"46"},{"size":5614,"mtime":1611538172009,"results":"47","hashOfConfig":"46"},{"size":764,"mtime":1611530749256,"results":"48","hashOfConfig":"46"},{"size":1939,"mtime":1611538112054,"results":"49","hashOfConfig":"46"},{"size":405,"mtime":1609705430726,"results":"50","hashOfConfig":"46"},{"size":12314,"mtime":1611010377797,"results":"51","hashOfConfig":"46"},{"size":551,"mtime":1611537997877,"results":"52","hashOfConfig":"46"},{"size":109284,"mtime":1610150738198,"results":"53","hashOfConfig":"46"},{"size":1371,"mtime":1611444911080,"results":"54","hashOfConfig":"46"},{"size":681,"mtime":1611530799860,"results":"55","hashOfConfig":"46"},{"size":7535,"mtime":1611538324242,"results":"56","hashOfConfig":"46"},{"size":7804,"mtime":1611538101857,"results":"57","hashOfConfig":"46"},{"size":4431,"mtime":1611536409824,"results":"58","hashOfConfig":"46"},{"size":5244,"mtime":1611015161609,"results":"59","hashOfConfig":"46"},{"size":974,"mtime":1610922297644,"results":"60","hashOfConfig":"46"},{"size":379,"mtime":1610922143150,"results":"61","hashOfConfig":"46"},{"size":5174,"mtime":1611539718307,"results":"62","hashOfConfig":"46"},{"size":3695,"mtime":1611531087611,"results":"63","hashOfConfig":"46"},{"size":405,"mtime":1646813174039,"results":"64","hashOfConfig":"65"},{"size":5244,"mtime":1646813174020,"results":"66","hashOfConfig":"65"},{"size":1371,"mtime":1646813174014,"results":"67","hashOfConfig":"65"},{"size":379,"mtime":1646813174015,"results":"68","hashOfConfig":"65"},{"size":861,"mtime":1651052880379,"results":"69","hashOfConfig":"65"},{"size":7804,"mtime":1646813174033,"results":"70","hashOfConfig":"65"},{"size":7535,"mtime":1646813174022,"results":"71","hashOfConfig":"65"},{"size":109284,"mtime":1646813174025,"results":"72","hashOfConfig":"65"},{"size":6563,"mtime":1651049980636,"results":"73","hashOfConfig":"65"},{"size":3695,"mtime":1646813174016,"results":"74","hashOfConfig":"65"},{"size":1939,"mtime":1646813174038,"results":"75","hashOfConfig":"65"},{"size":2494,"mtime":1651037606727,"results":"76","hashOfConfig":"65"},{"size":12314,"mtime":1646813174021,"results":"77","hashOfConfig":"65"},{"size":625,"mtime":1651050422161,"results":"78","hashOfConfig":"65"},{"size":974,"mtime":1646813174034,"results":"79","hashOfConfig":"65"},{"size":4677,"mtime":1651051510724,"results":"80","hashOfConfig":"65"},{"size":23532,"mtime":1649703697837,"results":"81","hashOfConfig":"65"},{"size":5686,"mtime":1649703697838,"results":"82","hashOfConfig":"65"},{"size":5174,"mtime":1646813174016,"results":"83","hashOfConfig":"65"},{"size":681,"mtime":1646813174015,"results":"84","hashOfConfig":"65"},{"size":2513,"mtime":1649703697834,"results":"85","hashOfConfig":"65"},{"size":8877,"mtime":1651053431677,"results":"86","hashOfConfig":"65"},{"size":3083,"mtime":1651048897582,"results":"87","hashOfConfig":"65"},{"size":3151,"mtime":1651052987470,"results":"88","hashOfConfig":"65"},{"size":805,"mtime":1651053055670,"results":"89","hashOfConfig":"65"},{"size":325,"mtime":1651052908016,"results":"90","hashOfConfig":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m62ta2",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"v0yjva",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"135"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":1,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/index.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/HomePage.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/types.js",[],["190","191"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/stateReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/store.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/QuestionBlock.js",["192","193"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  Container,\n  Header,\n  Grid,\n  Segment,\n  Dropdown,\n  Progress,\n  Image,\n  Modal,\n  Icon,\n  Button,\n} from 'semantic-ui-react';\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\n\nimport {\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n} from '../actions/blockActions';\n\nimport { modalActions } from '../actions/stateActions';\n\nconst QuestionBlock = ({\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n  modalActions,\n  questions,\n  block_id,\n  blocks,\n  current_block,\n  blocks_seen,\n  ping,\n  cancelModalIsOpen,\n}) => {\n  // make sure we have questions to display - if not, redirect to home page\n  const history = useHistory();\n  if (blocks === undefined) {\n    history.push('/');\n    return <div>empty</div>;\n  }\n  // set current block & questions\n  current_block = blocks.find((b) => b.block_id === block_id);\n  questions = current_block.questions;\n\n  const isSelected = (value, option) => {\n    return (value, value.find((o) => o === option.value) !== undefined)\n      ? 'orange'\n      : 'black';\n  };\n\n  const dropdownChange = (event, { value }, qId) => {\n    // console.log(value, qId);\n    dropDownSelect(block_id, qId, value);\n  };\n\n  const getOptions = (options) => {\n    let ddOptions = [];\n    options.forEach((o) => {\n      ddOptions.push({ key: o.value, value: o.value, text: o.value });\n    });\n    return ddOptions;\n  };\n\n  const onTextChange = (qId, val) => {\n    // console.log(qId, val);\n    updateFRAction(block_id, qId, val);\n  };\n\n  const reviewEnabled = () => {\n    let unfinished = blocks.filter(\n      (b) => b.required && b.enabled && nextDisabled(b.block_id)\n    );\n    let curr_index = blocks.indexOf(\n      blocks.find((b) => b.block_id === block_id)\n    );\n\n    if (blocks_seen !== undefined) {\n      for (let i = curr_index; i < blocks.length; i++) {\n        const this_block = blocks[i];\n        if (this_block.enabled && !blocks_seen.includes(blocks[i].block_id)) {\n          return false;\n        }\n      }\n    }\n    return unfinished.length > 0 ? false : true;\n  };\n\n  const nextDisabled = (b_id = block_id) => {\n    let currBlock = blocks.find((b) => b.block_id === b_id);\n    let unfinished = currBlock.questions.filter(\n      (q) =>\n        q.required && q.enabled && (q.value === null || q.value.length === 0)\n    );\n    return unfinished === undefined || unfinished.length > 0 ? true : false;\n  };\n\n  const nextDisabledVar = nextDisabled();\n\n  const previousVisible = () => {\n    let check = blocks.indexOf(blocks.find((b) => b.block_id === block_id)) - 1;\n    while (check >= 0) {\n      if (blocks[check].enabled) {\n        return true;\n      }\n      check--;\n    }\n    return false;\n  };\n\n  const nextVisible = () => {\n    let check = blocks.indexOf(blocks.find((b) => b.block_id === block_id)) + 1;\n    while (check < blocks.length) {\n      if (blocks[check].enabled) {\n        return true;\n      }\n      check++;\n    }\n    return false;\n  };\n\n  const getProgress = () => {\n    const numEnabled = blocks.filter((b) => b.enabled);\n    let numCompleted = 1;\n    for (\n      let i = 0;\n      i < blocks.indexOf(blocks.find((b) => b.block_id === block_id));\n      i++\n    ) {\n      if (blocks[i].enabled) {\n        numCompleted++;\n      }\n    }\n    console.log(\n      'progress is',\n      Math.floor((numCompleted / numEnabled.length) * 100)\n    );\n    return Math.floor((numCompleted / numEnabled.length) * 100);\n  };\n\n  const nextBlockActionLocal = () => {\n    if (!nextDisabledVar) {\n      nextBlockAction();\n    } else {\n    }\n  };\n\n  const getDefaultValue = (type, val) => {\n    if (val === []) {\n      return [];\n    }\n    if (type === 'DDS') {\n      return val[0];\n    } else {\n      return val;\n    }\n  };\n\n  const setTodaysDate = (q_id) => {\n    let now = new Date();\n    let month = `${now.getMonth() + 1}`;\n    if (month.length === 1) {\n      month = `0${month}`;\n    }\n    let date = `${now.getDate()}`;\n    if (date.length === 1) {\n      date = `0${date}`;\n    }\n    let dateIso = `${now.getFullYear()}-${month}-${date}`;\n    if (current_block.questions.find((q) => q.id === q_id).value.length === 0) {\n      onTextChange(q_id, dateIso);\n    }\n    return dateIso;\n  };\n\n  const getAllQIds = () => {\n    let ids = [];\n    let retVal = '';\n    blocks.forEach((b) => {\n      b.questions.forEach((q) => {\n        ids.push(q.id);\n        retVal += q.id + ', ';\n      });\n    });\n    console.log(ids);\n    console.log(retVal);\n    return retVal;\n  };\n\n  return (\n    <Fragment>\n      <Modal basic open={cancelModalIsOpen}>\n        <Modal.Content>\n          <p>\n            Are you sure you'd like to abandon this survey and return to the\n            home page? All survey data will be lost\n          </p>\n        </Modal.Content>\n        <Modal.Actions>\n          <Link to='/'>\n            <Button color='red' inverted onClick={() => modalActions(true)}>\n              <Icon name='remove' /> Abandon\n            </Button>\n          </Link>\n          <Button color='green' inverted onClick={() => modalActions(false)}>\n            <Icon name='checkmark' /> Continue Survey\n          </Button>\n        </Modal.Actions>\n      </Modal>\n      <Progress percent={getProgress()} color={'blue'} progress active />\n      <Container\n        fluid\n        id='header'\n        style={{\n          backgroundColor: 'white',\n          padding: '2%',\n          paddingBottom: '1.5%',\n          borderRadius: '10px',\n        }}\n      >\n        {current_block.required && (\n          <Header size={'tiny'} color={'blue'} style={{ fontSize: '70%' }}>\n            {current_block.block_header}\n          </Header>\n        )}\n        {!current_block.required && (\n          <Header size={'tiny'} color={'orange'} style={{ fontSize: '70%' }}>\n            {current_block.block_header} (Optional)\n          </Header>\n        )}\n        <Container text fluid>\n          <p>{current_block.block_description}</p>\n        </Container>\n      </Container>\n      <Container\n        style={{ overflowX: 'auto', marginBottom: '6.5%', marginTop: '2%' }}\n      >\n        {questions.map(\n          (q) =>\n            q.enabled && (\n              <Container fluid key={q.id} className={'questionBlock'}>\n                <Grid divided stackable columns={2}>\n                  <Grid.Row>\n                    <Grid.Column textAlign={'left'} width={8}>\n                      <Container text fluid style={{ maxWidth: '30%' }}>\n                        <Header size={'tiny'}>{q.question_header}</Header>\n                        <p>{q.question_desc}</p>\n                        {q.img !== undefined &&\n                          q.img !== null &&\n                          q.img !== '' && <Image src={q.img} fluid />}\n                        {q.long_question_desc != null &&\n                          q.long_question_desc.length > 0 &&\n                          q.long_question_desc.map((desc) => (\n                            <p key={desc}>{desc}</p>\n                          ))}\n                      </Container>\n                    </Grid.Column>\n                    <Grid.Column width={8} textAlign={'right'}>\n                      <Container\n                        fluid\n                        style={{\n                          display: 'flex',\n                          flexFlow: 'wrap',\n                        }}\n                      >\n                        {(q.type === 'MC' || q.type === 'SATA') &&\n                          q.options.map((o) => (\n                            <Segment\n                              textAlign={'center'}\n                              inverted\n                              color={isSelected(q.value, o)}\n                              onClick={() =>\n                                blockAction(block_id, q.id, o.value)\n                              }\n                              key={o.value}\n                              style={{\n                                margin: '1%',\n                                fontSize: '1.1rem',\n                              }}\n                              className={'selectButtons'}\n                            >\n                              {o.value}\n                            </Segment>\n                          ))}\n                        {(q.type === 'DDS' || q.type === 'DDM') && (\n                          <Container key={q.id}>\n                            <Dropdown\n                              fluid\n                              multiple={q.type === 'DDM'}\n                              selection\n                              clearable\n                              defaultValue={getDefaultValue(q.type, q.value)}\n                              options={getOptions(q.options)}\n                              onChange={(e, s) => dropdownChange(e, s, q.id)}\n                              style={{ fontSize: '1rem' }}\n                            />\n                          </Container>\n                        )}\n                        {q.type === 'FR' && (\n                          <Container key={q.id}>\n                            <input\n                              name={q.value}\n                              defaultValue={q.value}\n                              type={q.fr_type}\n                              onChange={(val) =>\n                                onTextChange(q.id, val.target.value)\n                              }\n                              className={'inputField'}\n                            ></input>\n                          </Container>\n                        )}\n                      </Container>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n              </Container>\n            )\n        )}\n      </Container>\n      <Container\n        className={'bottomButtons'}\n        style={{ position: 'absolute', bottom: '3.6%' }}\n      >\n        <Grid container>\n          <Grid.Row columns={'4'}>\n            <Grid.Column floated='left'>\n              {previousVisible() && (\n                <Segment\n                  style={{ margin: '2%' }}\n                  inverted\n                  color={'blue'}\n                  onClick={() => prevBlockAction()}\n                  className={'buttonSegEnabled'}\n                >\n                  Previous\n                </Segment>\n              )}\n            </Grid.Column>\n            <Grid.Column floated='left'>\n              <Segment\n                style={{ margin: '2%' }}\n                inverted\n                color={'red'}\n                onClick={() => modalActions(false)}\n                className={'buttonSegEnabled'}\n              >\n                Cancel\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              {reviewEnabled() && (\n                <Link to='/review'>\n                  <Segment\n                    style={{ margin: '2%' }}\n                    inverted\n                    color={'green'}\n                    className={'buttonSegEnabled'}\n                  >\n                    Review\n                  </Segment>\n                </Link>\n              )}\n            </Grid.Column>\n            <Grid.Column floated='right'>\n              {nextVisible() && (\n                <Segment\n                  style={{ margin: '2%' }}\n                  inverted\n                  color={'blue'}\n                  onClick={() => nextBlockActionLocal()}\n                  disabled={nextDisabledVar}\n                  className={\n                    nextDisabledVar ? 'buttonSegDisabled' : 'buttonSegEnabled'\n                  }\n                >\n                  Next\n                </Segment>\n              )}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    // questions: state.blocks.questions,\n    ping: state.blocks.ping,\n\n    block_id: state.blocks.current,\n    blocks: state.blocks.blocks,\n    blocks_seen: state.blocks.blocks_seen,\n\n    cancelModalIsOpen: state.state.cancelModalIsOpen,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  blockAction,\n  dropDownSelect,\n  updateFRAction,\n  nextBlockAction,\n  prevBlockAction,\n  modalActions,\n})(QuestionBlock);\n",["194","195"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/index.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/images/logo.js",[],["196","197"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/blockActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/stateActions.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ReviewBlock.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/blockReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/App.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportPage.js",[],["198","199"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/reducers/exportReducer.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/actions/exportActions.js",[],["200","201"],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModal.js",[],"/Users/varunbhajekar/MyCode/Personal/MERN-course-varun/client/src/components/ExportModalContent.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/store.js",[],["202","203"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportPage.js",[],["204","205"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/blockActions.js",[],["206","207"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/exportActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/types.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/blockReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ReviewBlock.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/logo.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/HomePage.js",["208","209"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModalContent.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/stateReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/index.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/QuestionBlock.js",["210","211"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/index.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/exportReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/App.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/new_logo.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/images/newer_logo.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ExportModal.js",[],["212","213"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/stateActions.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/AboutPage.js",["214","215","216","217","218","219","220","221","222","223"],"import { Grid, Segment, Image, Container } from 'semantic-ui-react';\n\nimport { Link } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport '../index.css';\nimport { Fragment } from 'react';\n\nimport { logo } from '../images/logo';\nimport { new_logo } from '../images/new_logo';\nimport { newer_logo } from '../images/newer_logo';\n\nimport { connect as reduxConnect } from 'react-redux';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport { toggleExportModal } from '../actions/stateActions';\n\nimport ExportModal from './ExportModal';\n\nconst AboutPage = ({\n  toggleExportModal,\n  isAdmin,\n  isMobile,\n  homePageMessage,\n}) => {\n  const { isAuthenticated, loginWithRedirect, logout, isLoading, error } =\n    useAuth0();\n\n  if (window.matchMedia('(max-width: 767px)').matches) {\n    isMobile = true;\n  } else {\n    isMobile = false;\n  }\n\n  if (error) {\n    homePageMessage = `${error}`;\n    console.log(error);\n  }\n\n  return (\n    <Fragment>\n      <Container text style={{ color: 'white' }}>\n        <Image\n          // src={logo}\n          // src={new_logo}\n          src={newer_logo}\n          alt='Red dot'\n          centered\n          style={{ marginTop: '4%' }}\n        />\n        <div>\n          Battery Electric Vehicles and Plug-In Hybrid Vehicles do reduce\n          greenhouse gas emissions and pollute the air less, but there is a\n          space for further development.\n        </div>\n        <div>\n          Some of the most functional, frustration and traffic-free cities rely\n          heavily on bikes and public transportation.\n        </div>\n        <div>\n          By facilitating a shift towards those modes of transportation, we can\n          create a cleaner, easier city.\n        </div>\n        <div>\n          These methods of transportation are more accessible than you think.\n        </div>\n        <div>\n          Public transit is shown to be 10 times safer than driving and makes\n          communities safer Electric bikes and scooters are everywhere, thanks\n          to rideshare companies. You might have accessible options available\n          for your needs so you can drive less, pollute less, and help build a\n          better city!\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    continueToSurvey: state.blocks.cont,\n    isAdmin: state.state.isAdmin,\n    homePageMessage: state.state.homePageMessage,\n  };\n};\n\nexport default reduxConnect(mapStateToProps, {\n  toggleExportModal,\n})(AboutPage);\n","/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/ResultsPage.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/mapComponent.js",["224","225","226","227","228","229","230","231","232","233"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/components/MapComponent.js",["234","235"],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/reducers/resultsReducer.js",[],"/Users/varunbhajekar/MyCode/School/itp499/Experimental-Surgery-Survey/client/src/actions/resultsActions.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":170,"column":9,"nodeType":"242","messageId":"243","endLine":170,"endColumn":22},{"ruleId":"240","severity":1,"message":"244","line":187,"column":9,"nodeType":"242","messageId":"243","endLine":187,"endColumn":19},{"ruleId":"236","replacedBy":"245"},{"ruleId":"238","replacedBy":"246"},{"ruleId":"236","replacedBy":"247"},{"ruleId":"238","replacedBy":"248"},{"ruleId":"236","replacedBy":"249"},{"ruleId":"238","replacedBy":"250"},{"ruleId":"236","replacedBy":"251"},{"ruleId":"238","replacedBy":"252"},{"ruleId":"236","replacedBy":"253"},{"ruleId":"238","replacedBy":"254"},{"ruleId":"236","replacedBy":"255"},{"ruleId":"238","replacedBy":"256"},{"ruleId":"236","replacedBy":"257"},{"ruleId":"238","replacedBy":"258"},{"ruleId":"240","severity":1,"message":"259","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":14},{"ruleId":"240","severity":1,"message":"260","line":11,"column":10,"nodeType":"242","messageId":"243","endLine":11,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":170,"column":9,"nodeType":"242","messageId":"243","endLine":170,"endColumn":22},{"ruleId":"240","severity":1,"message":"244","line":187,"column":9,"nodeType":"242","messageId":"243","endLine":187,"endColumn":19},{"ruleId":"236","replacedBy":"261"},{"ruleId":"238","replacedBy":"262"},{"ruleId":"240","severity":1,"message":"263","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":14},{"ruleId":"240","severity":1,"message":"264","line":1,"column":16,"nodeType":"242","messageId":"243","endLine":1,"endColumn":23},{"ruleId":"240","severity":1,"message":"265","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"259","line":9,"column":10,"nodeType":"242","messageId":"243","endLine":9,"endColumn":14},{"ruleId":"240","severity":1,"message":"260","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":18},{"ruleId":"240","severity":1,"message":"266","line":18,"column":8,"nodeType":"242","messageId":"243","endLine":18,"endColumn":19},{"ruleId":"240","severity":1,"message":"267","line":26,"column":11,"nodeType":"242","messageId":"243","endLine":26,"endColumn":26},{"ruleId":"240","severity":1,"message":"268","line":26,"column":28,"nodeType":"242","messageId":"243","endLine":26,"endColumn":45},{"ruleId":"240","severity":1,"message":"269","line":26,"column":47,"nodeType":"242","messageId":"243","endLine":26,"endColumn":53},{"ruleId":"240","severity":1,"message":"270","line":26,"column":55,"nodeType":"242","messageId":"243","endLine":26,"endColumn":64},{"ruleId":"240","severity":1,"message":"271","line":1,"column":25,"nodeType":"242","messageId":"243","endLine":1,"endColumn":30},{"ruleId":"240","severity":1,"message":"265","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"259","line":9,"column":10,"nodeType":"242","messageId":"243","endLine":9,"endColumn":14},{"ruleId":"240","severity":1,"message":"260","line":10,"column":10,"nodeType":"242","messageId":"243","endLine":10,"endColumn":18},{"ruleId":"240","severity":1,"message":"272","line":11,"column":10,"nodeType":"242","messageId":"243","endLine":11,"endColumn":20},{"ruleId":"240","severity":1,"message":"273","line":14,"column":10,"nodeType":"242","messageId":"243","endLine":14,"endColumn":18},{"ruleId":"240","severity":1,"message":"266","line":20,"column":8,"nodeType":"242","messageId":"243","endLine":20,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":42,"column":5,"nodeType":"276","messageId":"277","endLine":52,"endColumn":6},{"ruleId":"240","severity":1,"message":"278","line":50,"column":9,"nodeType":"242","messageId":"243","endLine":50,"endColumn":20},{"ruleId":"279","severity":2,"message":"280","line":98,"column":41,"nodeType":"242","messageId":"281","endLine":98,"endColumn":60},{"ruleId":"240","severity":1,"message":"271","line":1,"column":25,"nodeType":"242","messageId":"243","endLine":1,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":36,"column":5,"nodeType":"276","messageId":"277","endLine":46,"endColumn":6},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'setTodaysDate' is assigned a value but never used.","Identifier","unusedVar","'getAllQIds' is assigned a value but never used.",["282"],["283"],["282"],["283"],["282"],["283"],["282"],["283"],["282"],["283"],["282"],["283"],["282"],["283"],"'logo' is defined but never used.","'new_logo' is defined but never used.",["282"],["283"],"'Grid' is defined but never used.","'Segment' is defined but never used.","'Link' is defined but never used.","'ExportModal' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'loginWithRedirect' is assigned a value but never used.","'logout' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'Image' is defined but never used.","'newer_logo' is defined but never used.","'useAuth0' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'transitMode' is assigned a value but never used.","no-undef","'monthlyElectricDiff' is not defined.","undef","no-global-assign","no-unsafe-negation"]